// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.6.1
// source: releasenamer/release_namer.proto

package releasenamer

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ReleaseNamerClient is the client API for ReleaseNamer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ReleaseNamerClient interface {
}

type releaseNamerClient struct {
	cc grpc.ClientConnInterface
}

func NewReleaseNamerClient(cc grpc.ClientConnInterface) ReleaseNamerClient {
	return &releaseNamerClient{cc}
}

// ReleaseNamerServer is the server API for ReleaseNamer service.
// All implementations must embed UnimplementedReleaseNamerServer
// for forward compatibility
type ReleaseNamerServer interface {
	mustEmbedUnimplementedReleaseNamerServer()
}

// UnimplementedReleaseNamerServer must be embedded to have forward compatible implementations.
type UnimplementedReleaseNamerServer struct {
}

func (UnimplementedReleaseNamerServer) mustEmbedUnimplementedReleaseNamerServer() {}

// UnsafeReleaseNamerServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ReleaseNamerServer will
// result in compilation errors.
type UnsafeReleaseNamerServer interface {
	mustEmbedUnimplementedReleaseNamerServer()
}

func RegisterReleaseNamerServer(s grpc.ServiceRegistrar, srv ReleaseNamerServer) {
	s.RegisterService(&ReleaseNamer_ServiceDesc, srv)
}

// ReleaseNamer_ServiceDesc is the grpc.ServiceDesc for ReleaseNamer service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ReleaseNamer_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "releasenamer.ReleaseNamer",
	HandlerType: (*ReleaseNamerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "releasenamer/release_namer.proto",
}
